@page
@model KompromatKoffer.Pages.Database.GlobalModel
@{
    ViewData["Title"] = "Global";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<div class="interactionMenuBar">
    <a asp-page="/Database/People" title="Politiker Bestenliste" class="iconHoverPages interactionMenu">
        <i class="fas fa-user-circle"> </i>
        &nbsp;
    </a>
    <a asp-page=""
       asp-route-sinceDays="-7"
       class="iconHoverPages" title="die letzten 7 Tage">
        7
        &nbsp;
    </a>
    <a asp-page=""
       asp-route-sinceDays="-14"
       class="iconHoverPages" title="die letzten 14 Tage">
        14
        &nbsp;
    </a>
    <a asp-page=""
       asp-route-sinceDays="-21"
       class="iconHoverPages" title="die letzten 21 Tage">
        21
        &nbsp;
    </a>
    <a asp-page=""
       asp-route-sinceDays="-28"
       class="iconHoverPages" title="die letzten 28 Tage">
        28
        &nbsp;
    </a>
    <a asp-page=""
       asp-route-sinceDays="-56"
       class="iconHoverPages" title="die letzten 56 Tage">
        56
        &nbsp;
    </a>
    <a asp-page=""
       asp-route-sinceDays="-112"
       class="iconHoverPages" title="die letzten 112 Tage">
        112
        &nbsp;
    </a>
    <a asp-page=""
       asp-route-sinceDays="-224"
       class="iconHoverPages" title="die letzten 224 Tage">
        224
        &nbsp;
    </a>
    <a asp-page=""
       asp-route-sinceDays="-365"
       class="iconHoverPages" title="die letzten 365 Tage">
        365
        &nbsp;
    </a>
</div>

<div class="GlobalChartView">
    @{
        <h4>Globale Charts seit dem @DateTime.Today.AddDays(Model.SinceDays).ToString("dd.MM.yyyy") </h4>
    }

    <canvas id="TwitterUserActivity" height="2200"></canvas>
    <script>
        var ctx = document.getElementById("TwitterUserActivity").getContext('2d');
        var myChart = new Chart(ctx, {
            type: 'horizontalBar',
            data: {
                labels: [
                    @foreach (var item in Model.DistinctNames)
                    {
                        var dateConvert = "'" + item + "'" + ", ";

                        @Html.Raw(dateConvert)

                    }

                ],
                datasets: [{
                    label: 'Tweets',
                    data: [
                         @foreach (var item in Model.StatusesCountAll)
                         {
                             var statusesConvert = "'" + Convert.ToString(item) + "'" + ", ";

                             @Html.Raw(statusesConvert)

                         }
                    ],
                    backgroundColor: 
                        'rgba(0, 172, 237, 1.0)'
                    ,
                    borderColor: 
                        'rgba(0, 172, 237, 1.0)'
                    ,
                    borderWidth: 4
                },{
                    label: 'Followers',
                    data: [
                         @foreach (var item in Model.FollowersCountAll)
                         {
                             var followerConvert = "'" + Convert.ToString(item) + "'" + ", ";

                             @Html.Raw(followerConvert)

                         }
                    ],
                    backgroundColor: 
                        'rgba(130, 32, 74, 1.0)'
                    ,
                    borderColor: 
                        'rgba(130, 32, 74, 1.0)'
                    ,
                    borderWidth: 4
                },{
                    label: 'Following',
                    data: [
                         @foreach (var item in Model.FriendsCountAll)
                         {
                             var friendsConvert = "'" + Convert.ToString(item) + "'" + ", ";

                             @Html.Raw(friendsConvert)

                         }
                    ],
                    backgroundColor: 
                        'rgba(68, 12, 80, 1.0)'
                    ,
                    borderColor: 
                        'rgba(68, 12, 80, 1.0)'
                    ,
                    borderWidth: 4
                },{
                    label: 'Likes',
                    data: [
                         @foreach (var item in Model.FavouritesCountAll)
                         {
                             var favouriteConvert = "'" + Convert.ToString(item) + "'" + ", ";

                             @Html.Raw(favouriteConvert)

                         }
                    ],
                    backgroundColor: 
                        'rgba(251, 251, 251, 1.0)'
                    ,
                    borderColor: 
                        'rgba(251, 251, 251, 1.0)'
                    ,
                    borderWidth: 4
                }
               ]
            },
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: false,
                            stacked: true
                        }
                    }]
                }
            }
        });
    </script>

</div>