@page "{screenname}"
@model KompromatKoffer.Pages.Database.PeopleDetailModel
@{
    ViewData["Title"] = "PeopleDetail";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}


<div class="interactionMenuBar">
    <a asp-page="/Database/People" title="Politiker Bestenliste" class="iconHoverPages interactionMenu">
    <i class="fas fa-user-circle"></i>
    &nbsp;
    </a>
    <a asp-page="/Database/Global" asp-route-sinceDays="-7" title="Global Chart" class="iconHoverPages interactionMenu">
        <i class="fas fa-chart-line"></i>
        &nbsp;
    </a>
    <a asp-page=""
       asp-route-sinceDays="-2"
       class="iconHoverPages" title="die letzten 2 Tage">
        2
        &nbsp;
    </a>
    <a asp-page=""
       asp-route-sinceDays="-4"
       class="iconHoverPages" title="die letzten 4 Tage">
        4
        &nbsp;
    </a>
    <a asp-page=""
       asp-route-sinceDays="-7"
       class="iconHoverPages" title="die letzten 7 Tage">
        7
        &nbsp;
    </a>
    <a asp-page=""
       asp-route-sinceDays="-14"
       class="iconHoverPages" title="die letzten 14 Tage">
        14
        &nbsp;
    </a>
    <a asp-page=""
       asp-route-sinceDays="-21"
       class="iconHoverPages" title="die letzten 21 Tage">
        21
        &nbsp;
    </a>
    <a asp-page=""
       asp-route-sinceDays="-28"
       class="iconHoverPages" title="die letzten 28 Tage">
        28
        &nbsp;
    </a>
</div>


@{

    List<DateTime> DailyDate = new List<DateTime>();
    List<int> FollowerDaily = new List<int>();
    List<int> FriendsDaily = new List<int>();
    List<int> StatusesDaily = new List<int>();
    List<int> FavouritesDaily = new List<int>();

    var name = Model.CompleteDB.Find(s => s.DateToday >= DateTime.Today.AddDays(Model.SinceDays)).Where(s => s.Screen_name == Model.CurrentUserScreenname);

    var groupBy = name.GroupBy(s => s.Screen_name);

    foreach (var item in groupBy)
    {
        

        foreach (var items in item)
        {
            
            StatusesDaily.Add(items.Statuses_count);
            FollowerDaily.Add(items.Followers_count);
            FriendsDaily.Add(items.Friends_count);
            FavouritesDaily.Add(items.Favourites_count);
            DailyDate.Add(items.DateToday);

        }

    }


    //Get the Data from the TwitterUserData Collection
    var twitterUser = Model.TwitterUserData.FindOne(s => s.Screen_name == Model.CurrentUserScreenname);

}

<div class="TwitterUserTimline">
    <h4>Charts seit dem @DateTime.Today.AddDays(Model.SinceDays).ToString("dd.MM.yyyy") </h4>

    <a href="https://twitter.com/@twitterUser.Screen_name" target="_blank" class="twitterUserLink">


        <img class="twitterUserImage" src="@Html.Raw(twitterUser.Profile_image_url_https)" />
    </a>
    <h3>@Html.Raw(twitterUser.Name)</h3>
    <p>
        @Html.Raw(twitterUser.Description)
    </p>
    <p>
        <i class="fas fa-map-marker-alt"></i> @Html.Raw(twitterUser.Location)
        <i>&nbsp;</i>
        <i class="fas fa-home"></i> <a href="@Html.Raw(twitterUser.Url)" target="_blank" class="twitterUserWebsite">Website</a>
    </p>
    <p>
        <i class="fab fa-twitter"></i>&nbsp; @Html.Raw(twitterUser.Statuses_count)
        &nbsp;
        <i class="fas fa-grin-hearts"></i>&nbsp; @Html.Raw(twitterUser.Followers_count)
        &nbsp;
        <i class="fas fa-meh-rolling-eyes"></i>&nbsp; @Html.Raw(twitterUser.Friends_count)
        &nbsp;
        <i class="fas fa-heart"></i>&nbsp; @Html.Raw(twitterUser.Favourites_count)
    </p>

    <canvas id="TwitterUserActivity" width="200" height="100"></canvas>
    <script>
        var ctx = document.getElementById("TwitterUserActivity").getContext('2d');
        var myChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: [
                    @foreach (var item in DailyDate)
                    {
                        var dateConvert = "'" + item.ToString("dd.MM.yy") + "'" + ", ";

                        @Html.Raw(dateConvert)

                    }

                ],
                datasets: [{
                    label: 'Tweets',
                    data: [
                         @foreach (var item in StatusesDaily)
                         {
                             var statusesConvert = "'" + Convert.ToString(item - StatusesDaily.First()) + "'" + ", ";

                             @Html.Raw(statusesConvert)

                         }
                    ],
                    backgroundColor: [
                        'rgba(0, 172, 237, 0.0)'
                    ],
                    borderColor: [
                        'rgba(0, 172, 237, 1.0)'
                    ],
                    borderWidth: 1
                },{
                    label: 'Followers',
                    data: [
                         @foreach (var item in FollowerDaily)
                         {
                             var followerConvert = "'" + Convert.ToString(item - FollowerDaily.First()) + "'" + ", ";

                             @Html.Raw(followerConvert)

                         }
                    ],
                    backgroundColor: [
                        'rgba(130, 32, 74, 0.0)'
                    ],
                    borderColor: [
                        'rgba(130, 32, 74, 1.0)'
                    ],
                    borderWidth: 1
                },{
                    label: 'Following',
                    data: [
                         @foreach (var item in FriendsDaily)
                         {
                             var friendsConvert = "'" + Convert.ToString(item - FriendsDaily.First()) + "'" + ", ";

                             @Html.Raw(friendsConvert)

                         }
                    ],
                    backgroundColor: [
                        'rgba(68, 12, 80, 0.0)'
                    ],
                    borderColor: [
                        'rgba(68, 12, 80, 1.0)'
                    ],
                    borderWidth: 1
                },{
                    label: 'Likes',
                    data: [
                         @foreach (var item in FavouritesDaily)
                         {
                             var favouriteConvert = "'" + Convert.ToString(item - FavouritesDaily.First()) + "'" + ", ";

                             @Html.Raw(favouriteConvert)

                         }
                    ],
                    backgroundColor: [
                        'rgba(251, 251, 251, 0.0)'
                    ],
                    borderColor: [
                        'rgba(251, 251, 251, 1.0)'
                    ],
                    borderWidth: 1
                }
               ]
            },
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: false
                        }
                    }]
                }
            }
        });
    </script>


</div>
