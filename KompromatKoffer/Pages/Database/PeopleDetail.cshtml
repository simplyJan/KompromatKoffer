@page "{screenname}"
@model KompromatKoffer.Pages.Database.PeopleDetailModel
@{
    ViewData["Title"] = "PeopleDetail";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}



<div class="interactionMenuBar">
    <a asp-page="/Database/People" title="Database" class="iconHoverPages interactionMenu">
        <i class="fas fa-database"> </i>
        &nbsp;
    </a>
</div>



<div class="TwitterUserTimline">


    <a href="https://twitter.com/@Model.CurrentTwitterUser.ScreenName" target="_blank" class="twitterUserLink">


        <img class="twitterUserImage" src="@Html.DisplayFor(modelItem => Model.CurrentTwitterUser.ProfileImageUrlHttps)" />
    </a>
    <h3>@Model.CurrentTwitterUser.Name</h3>
    <p>
        @Model.CurrentTwitterUser.Description
    </p>
    <p>
        <i class="fas fa-map-marker-alt"></i> @Model.CurrentTwitterUser.Location
        <i>&nbsp;</i>
        <i class="fas fa-home"></i> <a href="@Model.CurrentTwitterUser.Url" target="_blank" class="twitterUserWebsite">Website</a>
    </p>
    <p>
        <i class="fab fa-twitter"></i>&nbsp; @Model.CurrentTwitterUser.StatusesCount
        &nbsp;
        <i class="fas fa-grin-hearts"></i>&nbsp; @Model.CurrentTwitterUser.FollowersCount
        &nbsp;
        <i class="fas fa-meh-rolling-eyes"></i>&nbsp; @Model.CurrentTwitterUser.FriendsCount
        &nbsp;
        <i class="fas fa-heart"></i>&nbsp; @Model.CurrentTwitterUser.FavouritesCount
        &nbsp;
        <i class="fas fa-list-ul"></i>&nbsp; @Model.CurrentTwitterUser.ListedCount
    </p>

    @{
        List<string> dateList = new List<string>();
        List<string> urlList = new List<string>();
        List<string> likesList = new List<string>();
        List<string> retweetList = new List<string>();
        List<string> hashTagList = new List<string>();
    }


    @foreach (var dates in Model.AllTweetsFromUser)
    {

        string likeIntString = dates.FavoriteCount + ", ";
        var dateString = "'" + dates.CreatedAt.ToString("dd.MM.yy") + "'" + ", ";

        string retweetString = dates.RetweetCount + ", ";

        string urlString = "'" + dates.Url + "'" + ", ";

        var hashTags = dates.Entities.Hashtags;

        foreach (var member in hashTags)
        {

            hashTagList.Add(member.ToString());

        }

        dateList.Add(dateString);

        likesList.Add(likeIntString);

        retweetList.Add(retweetString);

        urlList.Add(urlString);

        

    }

    @{
        Model.TweetHistoryDates = dateList;
    }




    <h4>Die letzten @dateList.Count() Tweets...</h4>


    <canvas id="TwitterUserActivity" width="200" height="100"></canvas>
    <script>
        var ctx = document.getElementById("TwitterUserActivity").getContext('2d');
        var myChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: [
                    @foreach (var listitem in dateList)
                    {

                        @Html.Raw(listitem);

                    }

                ],
                datasets: [{
                    label: 'Likes per Tweet',
                    data: [
                         @foreach (var likeitem in likesList)
                    {

                        @Html.Raw(likeitem);

                    }
                    ],
                    backgroundColor: [
                        'rgba(130, 32, 74, 1.0)'
                    ],
                    borderColor: [
                        'rgba(130, 32, 74, 1.0)'
                    ],
                    borderWidth: 1
                },
                {
                    label: 'Retweets per Tweet',
                    data: [
                         @foreach (var retweetitem in retweetList)
                    {

                        @Html.Raw(retweetitem);

                    }
                    ],
                    backgroundColor: [
                        'rgba(227, 231, 211, 1.0)'
                    ],
                    borderColor: [
                        'rgba(227, 231, 211, 1.0)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                }
            }
        });
    </script>



    <h4>Hashtags, die @Model.CurrentTwitterUser.Name nutzt</h4>
    <p>

        @{ 
            var hashTagListClean = hashTagList.Distinct().ToList();
        }

        @foreach (var hashme in hashTagListClean)
        {
            string hashtag = hashme + " ";

            <a href="https://twitter.com/search?q=@hashtag.Replace("#","%23")" target="_blank">@hashtag</a>

        }
    </p>






    <h4>Die letzten @Model.AllTweetsFromUser.Count() Tweets von @Model.CurrentTwitterUser.Name</h4>




    <div class="TwitterUserTimelineOverview">
        @foreach (var item in Model.AllTweetsFromUser)
        {

        <div id="tweetLink" class="redBG">
            @item.Id
            <a href="@item.Url" class="TwitterUserTimeline" target="_blank">
                <p>
                    @Html.DisplayFor(modelItem => item.FullText)
                </p>
                <p>
                    @{
                        var hashtags = item.Entities.Hashtags;

                        foreach (var member in hashtags)
                        {

                            <i>@member.ToString() &nbsp;</i>


                        }

                    }
                </p>


                <i class="fas fa-retweet"></i> @item.RetweetCount &emsp; <i class="fas fa-heart"></i> @item.FavoriteCount &emsp; <i class="far fa-calendar-alt"></i>&nbsp;@item.CreatedAt.ToString("dd.MM.yy - H:mm")

            </a>
            &emsp;
            Source: @item.Source
            &emsp;
            Textrange: @item.DisplayTextRange.Sum()
            &emsp;



        </div>




        }

    </div>

</div>
