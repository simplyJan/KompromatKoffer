@page "{screenname}"
@model KompromatKoffer.Pages.Database.PeopleDetailModel
@{
    ViewData["Title"] = "PeopleDetail";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<!--Interaction MenuBar begins here-->
<div class="interactionMenuBar">
    <a asp-page="/Database/People" title="Politiker Bestenliste" class="iconHoverPages interactionMenu">
        <i class="fas fa-user-circle"></i>
        &nbsp;
    </a>
    <a asp-page="/Database/Global" asp-route-sinceDays="-7" title="Global Chart" class="iconHoverPages interactionMenu">
        <i class="fas fa-chart-line"></i>
        &nbsp;
    </a>
    <a asp-page=""
       asp-route-sinceDays="-2"
       class="iconHoverPages" title="die letzten 2 Tage">
        2
        &nbsp;
    </a>
    <a asp-page=""
       asp-route-sinceDays="-4"
       class="iconHoverPages" title="die letzten 4 Tage">
        4
        &nbsp;
    </a>
    <a asp-page=""
       asp-route-sinceDays="-7"
       class="iconHoverPages" title="die letzten 7 Tage">
        7
        &nbsp;
    </a>
    <a asp-page=""
       asp-route-sinceDays="-14"
       class="iconHoverPages" title="die letzten 14 Tage">
        14
        &nbsp;
    </a>
    <a asp-page=""
       asp-route-sinceDays="-21"
       class="iconHoverPages" title="die letzten 21 Tage">
        21
        &nbsp;
    </a>
    <a asp-page=""
       asp-route-sinceDays="-28"
       class="iconHoverPages" title="die letzten 28 Tage">
        28
        &nbsp;
    </a>
    <a asp-page=""
       asp-route-sinceDays="-56"
       class="iconHoverPages" title="die letzten 56 Tage">
        56
        &nbsp;
    </a>
    <a asp-page=""
       asp-route-sinceDays="-112"
       class="iconHoverPages" title="die letzten 112 Tage">
        112
        &nbsp;
    </a>
</div>
<!--Interaction MenuBar ends here-->

@{

    List<DateTime> DailyDate = new List<DateTime>();
    List<int> FollowerDaily = new List<int>();
    List<int> FriendsDaily = new List<int>();
    List<int> StatusesDaily = new List<int>();
    List<int> FavouritesDaily = new List<int>();

    var name = Model.CompleteDB.Find(s => s.DateToday >= DateTime.Today.AddDays(Model.SinceDays)).Where(s => s.Screen_name == Model.CurrentUserScreenname);

    var groupBy = name.GroupBy(s => s.Screen_name);

    foreach (var item in groupBy)
    {

        foreach (var items in item)
        {

            StatusesDaily.Add(items.Statuses_count);
            FollowerDaily.Add(items.Followers_count);
            FriendsDaily.Add(items.Friends_count);
            FavouritesDaily.Add(items.Favourites_count);
            DailyDate.Add(items.DateToday);

        }
    }


    //Get the Data from the TwitterUserData Collection
    var twitterUser = Model.TwitterUserData.FindOne(s => s.Screen_name == Model.CurrentUserScreenname);

}

@{

    var userTweets = Model.TwitterStreamData.Find(s => s.TweetUser == Model.CurrentUserScreenname);


}

<div class="TwitterUserTimline">
    <h4>Charts seit dem @DateTime.Today.AddDays(Model.SinceDays).ToString("dd.MM.yyyy") </h4>

    <a href="https://twitter.com/@twitterUser.Screen_name" target="_blank" class="twitterUserLink">


        <img class="twitterUserImage" src="@Html.Raw(twitterUser.Profile_image_url_https)" />
    </a>
    <h3>@Html.Raw(twitterUser.Name)</h3>
    <p>
        @Html.Raw(twitterUser.Description)
    </p>
    <p>
        <i class="fas fa-map-marker-alt"></i> @Html.Raw(twitterUser.Location)
        <i>&nbsp;</i>
        <i class="fas fa-home"></i> <a href="@Html.Raw(twitterUser.Url)" target="_blank" class="twitterUserWebsite">Website</a>
    </p>
    <p>
        <i class="fab fa-twitter"></i>&nbsp; @Html.Raw(twitterUser.Statuses_count)
        &nbsp;
        <i class="fas fa-grin-hearts"></i>&nbsp; @Html.Raw(twitterUser.Followers_count)
        &nbsp;
        <i class="fas fa-meh-rolling-eyes"></i>&nbsp; @Html.Raw(twitterUser.Friends_count)
        &nbsp;
        <i class="fas fa-heart"></i>&nbsp; @Html.Raw(twitterUser.Favourites_count)
    </p>

    <canvas id="TwitterUserActivity" width="200" height="100"></canvas>
    <script>
        var ctx = document.getElementById("TwitterUserActivity").getContext('2d');
        var myChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: [
                    @foreach (var item in DailyDate)
                    {
                        var dateConvert = "'" + item.ToString("dd.MM.yy") + "'" + ", ";

                        @Html.Raw(dateConvert)

                    }

                ],
                datasets: [{
                    label: 'Tweets',
                    data: [
                         @foreach (var item in StatusesDaily)
                         {
                             var statusesConvert = "'" + Convert.ToString(item - StatusesDaily.First()) + "'" + ", ";

                             @Html.Raw(statusesConvert)

                         }
                    ],
                    backgroundColor: [
                        'rgba(0, 172, 237, 0.0)'
                    ],
                    borderColor: [
                        'rgba(0, 172, 237, 1.0)'
                    ],
                    borderWidth: 1
                },{
                    label: 'Followers',
                    data: [
                         @foreach (var item in FollowerDaily)
                         {
                             var followerConvert = "'" + Convert.ToString(item - FollowerDaily.First()) + "'" + ", ";

                             @Html.Raw(followerConvert)

                         }
                    ],
                    backgroundColor: [
                        'rgba(130, 32, 74, 0.0)'
                    ],
                    borderColor: [
                        'rgba(130, 32, 74, 1.0)'
                    ],
                    borderWidth: 1
                },{
                    label: 'Following',
                    data: [
                         @foreach (var item in FriendsDaily)
                         {
                             var friendsConvert = "'" + Convert.ToString(item - FriendsDaily.First()) + "'" + ", ";

                             @Html.Raw(friendsConvert)

                         }
                    ],
                    backgroundColor: [
                        'rgba(68, 12, 80, 0.0)'
                    ],
                    borderColor: [
                        'rgba(68, 12, 80, 1.0)'
                    ],
                    borderWidth: 1
                },{
                    label: 'Likes',
                    data: [
                         @foreach (var item in FavouritesDaily)
                         {
                             var favouriteConvert = "'" + Convert.ToString(item - FavouritesDaily.First()) + "'" + ", ";

                             @Html.Raw(favouriteConvert)

                         }
                    ],
                    backgroundColor: [
                        'rgba(251, 251, 251, 0.0)'
                    ],
                    borderColor: [
                        'rgba(251, 251, 251, 1.0)'
                    ],
                    borderWidth: 1
                }
               ]
            },
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: false
                        }
                    }]
                }
            }
        });
    </script>















    <br />








    @{

        List<int> tweetTime = new List<int>();
        List<string> tweetWeekday = new List<string>();


        foreach (var date in userTweets)
        {
            tweetTime.Add(date.TweetCreatedAt.Hour);
            tweetWeekday.Add(date.TweetCreatedAt.DayOfWeek.ToString());

        }


        var one = tweetTime.FindAll(s => s == 1).Count();
        var two = tweetTime.FindAll(s => s == 2).Count();
        var three = tweetTime.FindAll(s => s == 3).Count();
        var four = tweetTime.FindAll(s => s == 4).Count();
        var five = tweetTime.FindAll(s => s == 5).Count();
        var six = tweetTime.FindAll(s => s == 6).Count();
        var seven = tweetTime.FindAll(s => s == 7).Count();
        var eight = tweetTime.FindAll(s => s == 8).Count();
        var nine = tweetTime.FindAll(s => s == 9).Count();
        var ten = tweetTime.FindAll(s => s == 10).Count();
        var eleven = tweetTime.FindAll(s => s == 11).Count();
        var twelve = tweetTime.FindAll(s => s == 12).Count();

        var onepm = tweetTime.FindAll(s => s == 13).Count();
        var twopm = tweetTime.FindAll(s => s == 14).Count();
        var threepm = tweetTime.FindAll(s => s == 15).Count();
        var fourpm = tweetTime.FindAll(s => s == 16).Count();
        var fivepm = tweetTime.FindAll(s => s == 17).Count();
        var sixpm = tweetTime.FindAll(s => s == 18).Count();
        var sevenpm = tweetTime.FindAll(s => s == 19).Count();
        var eightpm = tweetTime.FindAll(s => s == 20).Count();
        var ninepm = tweetTime.FindAll(s => s == 21).Count();
        var tenpm = tweetTime.FindAll(s => s == 22).Count();
        var elevenpm = tweetTime.FindAll(s => s == 23).Count();
        var twelvepm = tweetTime.FindAll(s => s == 0).Count();

    }

    <br />

    <h4>Tageszeitaktivität</h4>

    <canvas id="TwitterUserPostingTime" width="200" height="100"></canvas>


    <script>
    var ctxTUPT = document.getElementById("TwitterUserPostingTime").getContext('2d');
    var tuptChart = new Chart(ctxTUPT, {
            type: 'bar',
            data: {
                labels: [
                    1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24
                ],
                datasets: [{
                    label: 'Tweets',
                    data: [
                         @one,@two,@three,@four,@five,@six,@seven,@eight,@nine,@ten,@eleven,@twelve,@onepm,@twopm,@threepm,@fourpm,@fivepm,@sixpm,@sevenpm,@eightpm,@ninepm,@tenpm,@elevenpm,@twelvepm
                    ],
                    backgroundColor: 
                        'rgba(227, 231, 211, 1.0)'
                    ,
                    borderColor: 
                        'rgba(227, 231, 211, 1.0)'
                    ,
                    borderWidth: 0
                }
               ]
            },
            options: {
                legend: {
                    display: false,
                    labels: {
                        fontColor: 'rgb(255, 99, 132)'
                    }
                }

            }
        });
    </script>




    <br />


    <!--Hashtag Analaysis starts here-->
    <h4>Hashtags die dieser Politiker nutzt...</h4>

    @{

        List<string> hashTagList = new List<string>();


        @foreach (var hashtags in userTweets)
        {

            var hashTags = hashtags.TweetHashtags;


            foreach (var member in hashTags)
            {

                hashTagList.Add(member.ToString());

            }


        }
    }




    @{
        var hashTagListClean = hashTagList.Distinct().ToList();
    }

    @foreach (var hashme in hashTagListClean)
    {
        string hashtag = hashme + " ";

        <a href="https://twitter.com/search?q=@hashtag.Replace("#","%23")" target="_blank">@hashtag</a>

    }

    <!--Hashtag Analysis ends here-->




</div>


<!--UserTweets starts here-->
<div class="lasthundred">
    <h4>@Convert.ToString(userTweets.Count()) Tweets </h4>


    @foreach (var x in userTweets.OrderByDescending(s => s.TweetCreatedAt))
    {


        <div id="tweetLink">
            <a asp-page="/Database/PeopleDetail" asp-route-screenname="@x.TweetUser" asp-route-sinceDays="-7" class="dataBaseProfile"><i class="fas fa-user-circle"></i></a>
            <a href="@x.TweetUrl" target="_blank" class="tweetLink">
                <img src="@x.TweetUserPicture" />
                <br>
                @x.TweetUserName
                <br>
                <p class="profileDesc">@x.TweetUserDesc</p>

                @Html.Raw(x.TweetText)

                <hr class="IndexHR" />

                <p class="socialIconsIndex">
                    <i class="fas fa-retweet"></i> @x.TweetReTweetCount &emsp; <i class="fas fa-heart"></i> @x.TweetFavoriteCount &emsp; @x.TweetCreatedAt.ToString("dd.MM.yy - H:mm")
                </p>

            </a>


        </div>

    }
    <!--UserTweets ends here-->


</div>
